{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component,OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Todo } from './todo';\nimport { TodoService} from './todo.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  todos: Todo[] = []\n  form: FormGroup = new FormGroup({\n    descricao : new FormControl('',[Validators.required,Validators.minLength(4)])\n  })\n\n  constructor(private service : TodoService      \n    ) {}\n\n  ngOnInit() {\n    this.listarTodos()\n\n  } \n  \n  listarTodos(){\n    this.service.listar().subscribe(todoList => this.todos = todoList)\n  }\n\n  submit(){\n    console.log(this.form.value)\n    const todo: Todo = { ...this.form.value }\n    this.service\n      .salvar(todo)\n      .subscribe(todo => {\n        this.todos.push(todo)\n        this.form.reset() \n      })\n  } \n\n  delete(todo: Todo) {\n    this.service.deletar(todo.id).subscribe({\n      next: (response) => this.listarTodos() \n    })\n  }\n\n  concluir(todo: Todo) {\n    this.service.concluir(todo.id).subscribe({\n      next: (todoAtualizado) => {\n        todo.concluido = todoAtualizado.concluido\n        todo.dataConcluido = todoAtualizado.dataConcluido\n      } \n    })\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\">\n    <a class=\"navbar-brand\" >Tarefas App</a>\n\n</nav>\n<div class=\"container mt-4\">\n    <h3>Tarefas</h3>\n    <hr />\n    <form [formGroup] = \"form\" (ngSubmit)=\"submit()\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input type=\"text\"  class=\"form-control\" formControlName=\"descricao\" />        \n            </div>\n            <div class=\"col-md-1\">\n                <button type=\"submit\" [disabled]=\"!form.get('descricao').valid\" class=\"btn btn-primary\"> Adicionar</button>        \n            </div>\n        </div>\n\n    </form>\n    <hr />\n    <div class=\"row\">\n        <div class=\"col-md-7\">\n            <ul class=\"list-group\">\n                <li *ngFor=\"let todo of todos\"\n                 class= \"list-group-item d-flex justify-content-between align-items-center\">\n                 <span class=\"{{todo.concluido ? 'concluido' : ''}}\">{{todo.descricao}} {{todo.dataConcluido}}</span>\n                 <div class=\"btn-group\">\n                    <button class=\"btn btn-success\"\n                     [disabled]= \"todo.concluido\"\n                     (click)=\"concluir(todo)\">Concluida</button>\n                    <button class=\"btn btn-danger\" (click)=\"delete(todo)\" >Excluir</button>                   \n                  </div>                 \n                </li>               \n              </ul>\n        </div> \n\n    </div>\n\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Todo } from './todo'\nimport { Observable } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  apiURL: string = environment.apiUrl\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  salvar(todo: Todo) : Observable<Todo>{\n    return this.http.post<Todo>(this.apiURL,todo)\n\n  }\n\n  listar() : Observable<Todo[]>{\n    return this.http.get<Todo[]>(this.apiURL);\n  }\n\n  deletar(id: number) : Observable<void> {\n    const url = `${this.apiURL}/${id}`\n    return this.http.delete<void>(url)\n  }\n\n  concluir(id: number) : Observable<Todo>{\n    const url = `${this.apiURL}/${id}/concluir`\n    return this.http.patch<Todo>(url,{})\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}